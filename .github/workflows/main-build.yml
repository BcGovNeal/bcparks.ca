name: Main-Build .NET API Image and Push to Openshift Registry
on:
  push:
    branches: [main, tools]
  workflow_dispatch:
    branches: [main, tools]
jobs:
  build-frontend:
    runs-on: ubuntu-20.04
    environment: Main
    env:
      VERSION: v1
      IMAGE_TAGS: latest
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      SERVICE_NAME: react-frontend
      IMAGE_NAME: frontend

    steps:

      - uses: actions/checkout@v2

      - name: Login to Docker repositories
        run: |
          docker login ${{ secrets.REDHAT_REPO }} -u ${{ secrets.REDHAT_REPO_USER }} -p '${{ secrets.REDHAT_REPO_AUTH }}'
          docker login ${OPENSHIFT_EXTERNAL_REPOSITORY} \
            -u ${OPENSHIFT_SA_USERNAME} \
            -p '${OPENSHIFT_SA_PASSWORD}'

      - name: Build the Frontend
        run: |          
          docker-compose build --force-rm --no-cache \
            --build-arg REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL} \
            --build-arg REACT_APP_FRONTEND_BASE_URL=${REACT_APP_FRONTEND_BASE_URL} \
            --build-arg PUBLIC_URL=${PUBLIC_URL} \
            ${SERVICE_NAME}
          
          docker image ls
          printenv
          
          docker tag \
            bcp-cms_${SERVICE_NAME} \
            ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_NAMESPACE}/${IMAGE_NAME}
          
            docker image push --all-tags \
            ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_NAMESPACE}/${IMAGE_NAME}

  build-cms:
    runs-on: ubuntu-20.04
    environment: Main
    env:
      VERSION: v1
      IMAGE_TAGS: latest
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      IMAGE_NAME: strapi
      SERVICE_NAME: strapi

    steps:
      - uses: actions/checkout@v2
      - name: Build the CMS
        run: |          
    
          docker-compose build --force-rm --no-cache \
            --build-arg DATABASE_HOST=${DATABASE_HOST} \
            --build-arg DATABASE_PORT=${DATABASE_PORT}} \
            --build-arg DATABASE_NAME=${DATABASE_NAME} \
            --build-arg DATABASE_USERNAME=${DATABASE_USERNAME} \
            --build-arg DATABASE_PASSWORD=${DATABASE_PASSWORD} \
            --build-arg DATABASE_SSL=${DATABASE_SSL} \
            $SERVICE_NAME
          
          docker image ls
          
          printenv
          
          docker tag bcp-cms_${SERVICE_NAME} \
            ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_NAMESPACE}/${IMAGE_NAME}
          
          docker image push --all-tags \
            ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_NAMESPACE}/${IMAGE_NAME}
