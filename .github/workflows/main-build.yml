name: Build Main Branch
on:
  push:
    branches: [main,tools]
  workflow_dispatch:
    branches: [main,tools]

jobs:
  build-frontend:
    runs-on: ubuntu-20.04
    environment: Main
    env:
      VERSION: v1
      IMAGE_TAGS: dev
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      SERVICE_NAME: react-frontend
      IMAGE_NAME: frontend
      REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
      REACT_APP_FRONTEND_BASE_URL: ${{ secrets.REACT_APP_FRONTEND_BASE_URL }}
      PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
      OPENSHIFT_EXTERNAL_REPOSITORY: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}
      OPENSHIFT_LICENSE_PLATE: ${{ secrets.OPENSHIFT_LICENSE_PLATE }}
      OPENSHIFT_SA_USERNAME: ${{ secrets.OPENSHIFT_SA_USERNAME }}
      OPENSHIFT_SA_PASSWORD: ${{ secrets.OPENSHIFT_SA_PASSWORD }}
    steps:
      - name: Login to OpenShift
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}
          username: ${{ secrets.OPENSHIFT_SA_USERNAME }}
          password: ${{ secrets.OPENSHIFT_SA_PASSWORD }}

      - name: Login to RedHat
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REDHAT_REPO }}
          username: ${{ secrets.REDHAT_REPO_USER }}
          password: ${{ secrets.REDHAT_REPO_AUTH }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}/${{ secrets.OPENSHIFT_LICENSE_PLATE }}-tools/${IMAGE_NAME}:${IMAGE_TAGS}
      
  # build-cms:
  #   runs-on: ubuntu-20.04
  #   environment: Main
  #   env:
  #     VERSION: v1
  #     IMAGE_TAGS: dev
  #     COMPOSE_DOCKER_CLI_BUILD: 1
  #     DOCKER_BUILDKIT: 1
  #     IMAGE_NAME: strapi
  #     SERVICE_NAME: strapi
  #     DATABASE_HOST: ${{secrets.DATABASE_HOST}}
  #     DATABASE_PORT: ${{secrets.DATABASE_PORT}}
  #     DATABASE_NAME: ${{secrets.DATABASE_NAME}}
  #     DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
  #     DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
  #     DATABASE_SSL: ${{secrets.DATABASE_SSL}} 
  #     OPENSHIFT_EXTERNAL_REPOSITORY: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
  #     OPENSHIFT_LICENSE_PLATE: ${{secrets.OPENSHIFT_LICENSE_PLATE}}
  #     OPENSHIFT_SA_USERNAME: ${{secrets.OPENSHIFT_SA_USERNAME}}
  #     OPENSHIFT_SA_PASSWORD: ${{secrets.OPENSHIFT_SA_PASSWORD}}
  #   steps:
  #     - name: Login to OpenShift
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}
  #         username: ${{ secrets.OPENSHIFT_SA_USERNAME }}
  #         password: ${{ secrets.OPENSHIFT_SA_PASSWORD }}

  #     - name: Login to RedHat
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ secrets.REDHAT_REPO }}
  #         username: ${{ secrets.REDHAT_REPO_USER }}
  #         password: ${{ secrets.REDHAT_REPO_AUTH }}

  #     - name: Building, pushing api
  #       uses: docker/build-push-action@v2
  #       run: |
  #         echo "Building ${IMAGE_NAME}..."
  #         docker-compose build --force-rm --no-cache \
  #           --build-arg DATABASE_HOST=${DATABASE_HOST} \
  #           --build-arg DATABASE_PORT=${DATABASE_PORT} \
  #           --build-arg DATABASE_NAME=${DATABASE_NAME} \
  #           --build-arg DATABASE_USERNAME=${DATABASE_USERNAME} \
  #           --build-arg DATABASE_PASSWORD=${DATABASE_PASSWORD} \
  #           --build-arg DATABASE_SSL=${DATABASE_SSL} \
  #           ${SERVICE_NAME}

  #         docker image ls

  #         echo "Tagging ${IMAGE_NAME}..."
  #         docker tag strapi/strapi:3.5.3 \
  #           ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_LICENSE_PLATE}-tools/${IMAGE_NAME}:${IMAGE_TAGS}

  #         echo "Pushing ${IMAGE_NAME}..."
  #         docker image push \
  #           ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_LICENSE_PLATE}-tools/${IMAGE_NAME}:${IMAGE_TAGS}

  # build-staging:
  #   runs-on: ubuntu-20.04
  #   environment: Main
  #   env:
  #     VERSION: v1
  #     IMAGE_TAGS: dev
  #     COMPOSE_DOCKER_CLI_BUILD: 1
  #     DOCKER_BUILDKIT: 1
  #     SERVICE_NAME: staging
  #     IMAGE_NAME: staging
  #     OPENSHIFT_EXTERNAL_REPOSITORY: ${{secrets.OPENSHIFT_EXTERNAL_REPOSITORY}}
  #     OPENSHIFT_LICENSE_PLATE: ${{secrets.OPENSHIFT_LICENSE_PLATE}}
  #     OPENSHIFT_SA_USERNAME: ${{secrets.OPENSHIFT_SA_USERNAME}}
  #     OPENSHIFT_SA_PASSWORD: ${{secrets.OPENSHIFT_SA_PASSWORD}}
  #   steps:
  #     - name: Login to OpenShift
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ secrets.OPENSHIFT_EXTERNAL_REPOSITORY }}
  #         username: ${{ secrets.OPENSHIFT_SA_USERNAME }}
  #         password: ${{ secrets.OPENSHIFT_SA_PASSWORD }}

  #     - name: Login to RedHat
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ${{ secrets.REDHAT_REPO }}
  #         username: ${{ secrets.REDHAT_REPO_USER }}
  #         password: ${{ secrets.REDHAT_REPO_AUTH }}
          
  #     - name: Building, pushing staging
  #       uses: actions/checkout@v2
  #       run: |
  #         echo "Building ${IMAGE_NAME}..."
  #         docker-compose build --force-rm --no-cache \
  #           ${SERVICE_NAME}

  #         docker image ls
          
  #         echo "Tagging ${IMAGE_NAME}..."
  #         docker tag \
  #           bcp-cms_${SERVICE_NAME} \
  #           ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_LICENSE_PLATE}-tools/${IMAGE_NAME}:${IMAGE_TAGS}

  #         echo "Pushing ${IMAGE_NAME}..."
  #         docker image push \
  #           ${OPENSHIFT_EXTERNAL_REPOSITORY}/${OPENSHIFT_LICENSE_PLATE}-tools/${IMAGE_NAME}:${IMAGE_TAGS}